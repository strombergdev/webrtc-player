{"mappings":"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","sources":["src/index.ts","src/adapters/AdapterFactory.ts","src/adapters/WHPPAdapter.ts","src/adapters/EyevinnAdapter.ts","src/adapters/WHEPAdapter.ts"],"sourcesContent":["import { Adapter } from './adapters/Adapter';\nimport {\n  AdapterFactory,\n  AdapterFactoryFunction\n} from './adapters/AdapterFactory';\nimport { EventEmitter } from 'events';\nimport { CSAIManager } from '@eyevinn/csai-manager';\n\nexport { ListAvailableAdapters } from './adapters/AdapterFactory';\n\nenum Message {\n  NO_MEDIA = 'no-media',\n  MEDIA_RECOVERED = 'media-recovered',\n  PEER_CONNECTION_FAILED = 'peer-connection-failed',\n  PEER_CONNECTION_CONNECTED = 'peer-connection-connected',\n  INITIAL_CONNECTION_FAILED = 'initial-connection-failed',\n  CONNECT_ERROR = 'connect-error'\n}\n\nexport interface MediaConstraints {\n  audioOnly?: boolean;\n  videoOnly?: boolean;\n}\n\nconst MediaConstraintsDefaults: MediaConstraints = {\n  audioOnly: false,\n  videoOnly: false\n};\n\ninterface WebRTCPlayerOptions {\n  video: HTMLVideoElement;\n  type: string;\n  adapterFactory?: AdapterFactoryFunction;\n  iceServers?: RTCIceServer[];\n  debug?: boolean;\n  vmapUrl?: string;\n  statsTypeFilter?: string; // regexp\n  detectTimeout?: boolean;\n  timeoutThreshold?: number;\n  mediaConstraints?: MediaConstraints;\n}\n\nconst RECONNECT_ATTEMPTS = 2;\n\nexport class WebRTCPlayer extends EventEmitter {\n  private videoElement: HTMLVideoElement;\n  private peer: RTCPeerConnection = <RTCPeerConnection>{};\n  private adapterType: string;\n  private adapterFactory: AdapterFactoryFunction | undefined = undefined;\n  private iceServers: RTCIceServer[];\n  private debug: boolean;\n  private channelUrl: URL = <URL>{};\n  private authKey?: string = undefined;\n  private reconnectAttemptsLeft: number = RECONNECT_ATTEMPTS;\n  private csaiManager?: CSAIManager;\n  private adapter: Adapter = <Adapter>{};\n  private statsInterval: ReturnType<typeof setInterval> | undefined;\n  private statsTypeFilter: string | undefined = undefined;\n  private msStatsInterval = 5000;\n  private mediaTimeoutOccured = false;\n  private mediaTimeoutThreshold = 30000;\n  private timeoutThresholdCounter = 0;\n  private bytesReceived = 0;\n  private mediaConstraints: MediaConstraints;\n\n  constructor(opts: WebRTCPlayerOptions) {\n    super();\n    this.mediaConstraints = {\n      ...MediaConstraintsDefaults,\n      ...opts.mediaConstraints\n    };\n    this.videoElement = opts.video;\n    this.adapterType = opts.type;\n    this.adapterFactory = opts.adapterFactory;\n    this.statsTypeFilter = opts.statsTypeFilter;\n    this.mediaTimeoutThreshold =\n      opts.timeoutThreshold ?? this.mediaTimeoutThreshold;\n\n    this.iceServers = [{ urls: 'stun:stun.l.google.com:19302' }];\n    if (opts.iceServers) {\n      this.iceServers = opts.iceServers;\n    }\n    this.debug = !!opts.debug;\n    if (opts.vmapUrl) {\n      this.csaiManager = new CSAIManager({\n        contentVideoElement: this.videoElement,\n        vmapUrl: opts.vmapUrl,\n        isLive: true,\n        autoplay: true\n      });\n      this.videoElement.addEventListener('ended', () => {\n        if (this.csaiManager) {\n          this.csaiManager.destroy();\n        }\n      });\n    }\n  }\n\n  async load(channelUrl: URL, authKey: string | undefined = undefined) {\n    this.channelUrl = channelUrl;\n    this.authKey = authKey;\n    this.connect();\n  }\n\n  // eslint-disable-next-line  @typescript-eslint/no-explicit-any\n  private log(...args: any[]) {\n    if (this.debug) {\n      console.log('WebRTC-player', ...args);\n    }\n  }\n\n  // eslint-disable-next-line  @typescript-eslint/no-explicit-any\n  private error(...args: any[]) {\n    console.error('WebRTC-player', ...args);\n  }\n\n  private async onConnectionStateChange() {\n    if (this.peer.connectionState === 'failed') {\n      this.emit(Message.PEER_CONNECTION_FAILED);\n      this.peer && this.peer.close();\n\n      if (this.reconnectAttemptsLeft <= 0) {\n        this.error('Connection failed, reconnecting failed');\n        return;\n      }\n\n      this.log(\n        `Connection failed, recreating peer connection, attempts left ${this.reconnectAttemptsLeft}`\n      );\n      await this.connect();\n      this.reconnectAttemptsLeft--;\n    } else if (this.peer.connectionState === 'connected') {\n      this.log('Connected');\n      this.emit(Message.PEER_CONNECTION_CONNECTED);\n      this.reconnectAttemptsLeft = RECONNECT_ATTEMPTS;\n    }\n  }\n\n  private onErrorHandler(error: string) {\n    this.log(`onError=${error}`);\n    switch (error) {\n      case 'reconnectneeded':\n        this.peer && this.peer.close();\n        this.videoElement.srcObject = null;\n        this.setupPeer();\n        this.adapter.resetPeer(this.peer);\n        this.adapter.connect();\n        break;\n      case 'connectionfailed':\n        this.peer && this.peer.close();\n        this.videoElement.srcObject = null;\n        this.emit(Message.INITIAL_CONNECTION_FAILED);\n        break;\n      case 'connecterror':\n        this.peer && this.peer.close();\n        this.adapter.resetPeer(this.peer);\n        this.emit(Message.CONNECT_ERROR);\n        break;\n    }\n  }\n\n  private async onConnectionStats() {\n    if (this.peer && this.statsTypeFilter) {\n      let bytesReceivedBlock = 0;\n      const stats = await this.peer.getStats(null);\n\n      stats.forEach((report) => {\n        if (report.type.match(this.statsTypeFilter)) {\n          this.emit(`stats:${report.type}`, report);\n        }\n\n        //inbound-rtp attribute bytesReceived from stats report will contain the total number of bytes received for this SSRC.\n        //In this case there are several SSRCs. They are all added together in each onConnectionStats iteration and compared to their value during the previous iteration.\n        if (report.type.match('inbound-rtp')) {\n          bytesReceivedBlock += report.bytesReceived;\n        }\n      });\n\n      if (bytesReceivedBlock <= this.bytesReceived) {\n        this.timeoutThresholdCounter += this.msStatsInterval;\n\n        if (\n          this.mediaTimeoutOccured === false &&\n          this.timeoutThresholdCounter >= this.mediaTimeoutThreshold\n        ) {\n          this.emit(Message.NO_MEDIA);\n          this.mediaTimeoutOccured = true;\n        }\n      } else {\n        this.bytesReceived = bytesReceivedBlock;\n        this.timeoutThresholdCounter = 0;\n\n        if (this.mediaTimeoutOccured == true) {\n          this.emit(Message.MEDIA_RECOVERED);\n          this.mediaTimeoutOccured = false;\n        }\n      }\n    }\n  }\n\n  private setupPeer() {\n    this.peer = new RTCPeerConnection({ iceServers: this.iceServers });\n    this.peer.onconnectionstatechange = this.onConnectionStateChange.bind(this);\n    this.peer.ontrack = this.onTrack.bind(this);\n  }\n\n  private onTrack(event: RTCTrackEvent) {\n    for (const stream of event.streams) {\n      if (stream.id === 'feedbackvideomslabel') {\n        continue;\n      }\n\n      console.log(\n        'Set video element remote stream to ' + stream.id,\n        ' audio ' +\n          stream.getAudioTracks().length +\n          ' video ' +\n          stream.getVideoTracks().length\n      );\n\n      // Create a new MediaStream if we don't have one\n      if (!this.videoElement.srcObject) {\n        this.videoElement.srcObject = new MediaStream();\n      }\n\n      // We might have one stream of both audio and video, or separate streams for audio and video\n      for (const track of stream.getTracks()) {\n        (this.videoElement.srcObject as MediaStream).addTrack(track);\n      }\n    }\n  }\n\n  private async connect() {\n    this.setupPeer();\n\n    if (this.adapterType !== 'custom') {\n      this.adapter = AdapterFactory(\n        this.adapterType,\n        this.peer,\n        this.channelUrl,\n        this.onErrorHandler.bind(this),\n        this.mediaConstraints,\n        this.authKey\n      );\n    } else if (this.adapterFactory) {\n      this.adapter = this.adapterFactory(\n        this.peer,\n        this.channelUrl,\n        this.onErrorHandler.bind(this),\n        this.mediaConstraints,\n        this.authKey\n      );\n    }\n    if (!this.adapter) {\n      throw new Error(`Failed to create adapter (${this.adapterType})`);\n    }\n\n    if (this.debug) {\n      this.adapter.enableDebug();\n    }\n\n    this.statsInterval = setInterval(\n      this.onConnectionStats.bind(this),\n      this.msStatsInterval\n    );\n    try {\n      await this.adapter.connect();\n    } catch (error) {\n      console.error(error);\n      this.stop();\n    }\n  }\n\n  mute() {\n    this.videoElement.muted = true;\n  }\n\n  unmute() {\n    this.videoElement.muted = false;\n  }\n\n  async unload() {\n    await this.adapter.disconnect();\n    this.stop();\n  }\n\n  stop() {\n    clearInterval(this.statsInterval);\n    this.peer.close();\n    this.videoElement.srcObject = null;\n    this.videoElement.load();\n  }\n\n  destroy() {\n    this.stop();\n    this.removeAllListeners();\n  }\n}\n","import { Adapter } from './Adapter';\nimport { WHPPAdapter } from './WHPPAdapter';\nimport { EyevinnAdapter } from './EyevinnAdapter';\nimport { WHEPAdapter } from './WHEPAdapter';\nimport { MediaConstraints } from '../index';\n\nexport interface AdapterFactoryFunction {\n  (\n    peer: RTCPeerConnection,\n    channelUrl: URL,\n    onError: (error: string) => void,\n    mediaConstraints: MediaConstraints,\n    authKey: string | undefined\n  ): Adapter;\n}\n\ninterface AdapterMap {\n  [type: string]: AdapterFactoryFunction;\n}\n\nconst WHPPAdapterFactory: AdapterFactoryFunction = (\n  peer,\n  channelUrl,\n  onError,\n  mediaConstraints,\n  authKey\n) => {\n  return new WHPPAdapter(peer, channelUrl, onError);\n};\n\nconst EyevinnAdapterFactory: AdapterFactoryFunction = (\n  peer,\n  channelUrl,\n  onError,\n  mediaConstraints,\n  authKey\n) => {\n  return new EyevinnAdapter(peer, channelUrl, onError);\n};\n\nconst WHEPAdapterFactory: AdapterFactoryFunction = (\n  peer,\n  channelUrl,\n  onError,\n  mediaConstraints,\n  authKey\n) => {\n  return new WHEPAdapter(peer, channelUrl, onError, mediaConstraints, authKey);\n};\n\nconst adapters: AdapterMap = {\n  'se.eyevinn.whpp': WHPPAdapterFactory,\n  'se.eyevinn.webrtc': EyevinnAdapterFactory,\n  whep: WHEPAdapterFactory\n};\n\nexport function AdapterFactory(\n  type: string,\n  peer: RTCPeerConnection,\n  channelUrl: URL,\n  onError: (error: string) => void,\n  mediaConstraints: MediaConstraints,\n  authKey?: string\n): Adapter {\n  return adapters[type](peer, channelUrl, onError, mediaConstraints, authKey);\n}\n\nexport function ListAvailableAdapters(): string[] {\n  return Object.keys(adapters);\n}\n","import { Adapter, AdapterConnectOptions } from './Adapter';\nimport { WHPPClient } from '@eyevinn/whpp-client';\n\nexport class WHPPAdapter implements Adapter {\n  private client: WHPPClient | undefined = undefined;\n  private localPeer: RTCPeerConnection | undefined = undefined;\n  private channelUrl: URL;\n  private debug = false;\n\n  constructor(\n    peer: RTCPeerConnection,\n    channelUrl: URL,\n    onError: (error: string) => void\n  ) {\n    this.channelUrl = channelUrl;\n    this.resetPeer(peer);\n  }\n\n  enableDebug() {\n    this.debug = true;\n  }\n\n  resetPeer(newPeer: RTCPeerConnection) {\n    this.localPeer = newPeer;\n  }\n\n  getPeer(): RTCPeerConnection | undefined {\n    return this.localPeer;\n  }\n\n  async connect(opts?: AdapterConnectOptions) {\n    if (this.localPeer) {\n      this.client = new WHPPClient(this.localPeer, this.channelUrl, {\n        debug: this.debug\n      });\n      await this.client.connect();\n    }\n  }\n\n  async disconnect() {\n    return;\n  }\n\n  private log(...args: any[]) {\n    if (this.debug) {\n      console.log('WebRTC-player', ...args);\n    }\n  }\n\n  private error(...args: any[]) {\n    console.error('WebRTC-player', ...args);\n  }\n}\n","import { Adapter, AdapterConnectOptions } from './Adapter';\n\nconst DEFAULT_CONNECT_TIMEOUT = 2000;\n\nexport class EyevinnAdapter implements Adapter {\n  private localPeer: RTCPeerConnection | undefined;\n  private channelUrl: URL;\n  private debug: boolean;\n  private iceGatheringTimeout: any;\n  private waitingForCandidates = false;\n  private resourceUrl: URL | undefined = undefined;\n\n  constructor(\n    peer: RTCPeerConnection,\n    channelUrl: URL,\n    onError: (error: string) => void\n  ) {\n    this.channelUrl = channelUrl;\n    this.debug = true;\n    this.resetPeer(peer);\n  }\n\n  enableDebug() {\n    this.debug = true;\n  }\n\n  resetPeer(newPeer: RTCPeerConnection) {\n    this.localPeer = newPeer;\n    this.localPeer.onicegatheringstatechange =\n      this.onIceGatheringStateChange.bind(this);\n    this.localPeer.oniceconnectionstatechange =\n      this.onIceConnectionStateChange.bind(this);\n    this.localPeer.onicecandidateerror = this.onIceCandidateError.bind(this);\n    this.localPeer.onicecandidate = this.onIceCandidate.bind(this);\n  }\n\n  getPeer(): RTCPeerConnection | undefined {\n    return this.localPeer;\n  }\n\n  async connect(opts?: AdapterConnectOptions) {\n    if (!this.localPeer) {\n      this.log('Local RTC peer not initialized');\n      return;\n    }\n\n    this.localPeer.addTransceiver('video', { direction: 'recvonly' });\n    this.localPeer.addTransceiver('audio', { direction: 'recvonly' });\n\n    const offer = await this.localPeer.createOffer({\n      offerToReceiveAudio: true,\n      offerToReceiveVideo: true\n    });\n    this.localPeer.setLocalDescription(offer);\n\n    this.waitingForCandidates = true;\n    this.iceGatheringTimeout = setTimeout(\n      this.onIceGatheringTimeout.bind(this),\n      (opts && opts.timeout) || DEFAULT_CONNECT_TIMEOUT\n    );\n  }\n\n  async disconnect() {\n    return;\n  }\n\n  private log(...args: any[]) {\n    if (this.debug) {\n      console.log('WebRTC-player', ...args);\n    }\n  }\n\n  private error(...args: any[]) {\n    console.error('WebRTC-player', ...args);\n  }\n\n  private onIceGatheringStateChange(event: Event) {\n    if (!this.localPeer) {\n      this.log('Local RTC peer not initialized');\n      return;\n    }\n\n    this.log('IceGatheringState', this.localPeer.iceGatheringState);\n\n    if (\n      this.localPeer.iceGatheringState !== 'complete' ||\n      !this.waitingForCandidates\n    ) {\n      return;\n    }\n\n    this.onDoneWaitingForCandidates();\n  }\n\n  private onIceConnectionStateChange() {\n    if (!this.localPeer) {\n      this.log('Local RTC peer not initialized');\n      return;\n    }\n\n    this.log('IceConnectionState', this.localPeer.iceConnectionState);\n\n    if (this.localPeer.iceConnectionState === 'failed') {\n      this.localPeer.close();\n    }\n  }\n\n  private async onIceCandidate(event: Event) {\n    if (event.type !== 'icecandidate') {\n      return;\n    }\n    const candidateEvent = <RTCPeerConnectionIceEvent>event;\n    const candidate: RTCIceCandidate | null = candidateEvent.candidate;\n    if (!candidate) {\n      return;\n    }\n\n    this.log('IceCandidate', candidate.candidate);\n  }\n\n  private onIceCandidateError(e: Event) {\n    this.log('IceCandidateError', e);\n  }\n\n  private onIceGatheringTimeout() {\n    this.log('IceGatheringTimeout');\n\n    if (!this.waitingForCandidates) {\n      return;\n    }\n\n    this.onDoneWaitingForCandidates();\n  }\n\n  private async onDoneWaitingForCandidates() {\n    if (!this.localPeer) {\n      this.log('Local RTC peer not initialized');\n      return;\n    }\n\n    this.waitingForCandidates = false;\n    clearTimeout(this.iceGatheringTimeout);\n\n    const response = await fetch(this.channelUrl.toString(), {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({ sdp: this.localPeer.localDescription?.sdp })\n    });\n    if (response.ok) {\n      const { sdp } = await response.json();\n      this.localPeer.setRemoteDescription({ type: 'answer', sdp: sdp });\n    }\n  }\n}\n","import { Adapter, AdapterConnectOptions } from './Adapter';\nimport { MediaConstraints } from '../index';\n\nconst DEFAULT_CONNECT_TIMEOUT = 2000;\n\nexport enum WHEPType {\n  Client,\n  Server\n}\n\nexport class WHEPAdapter implements Adapter {\n  private localPeer: RTCPeerConnection | undefined;\n  private channelUrl: URL;\n  private authKey?: string;\n  private debug = false;\n  private whepType: WHEPType;\n  private waitingForCandidates = false;\n  private iceGatheringTimeout: ReturnType<typeof setTimeout> | undefined;\n  private resource: string | null = null;\n  private onErrorHandler: (error: string) => void;\n  private audio: boolean;\n  private video: boolean;\n  private mediaConstraints: MediaConstraints;\n\n  constructor(\n    peer: RTCPeerConnection,\n    channelUrl: URL,\n    onError: (error: string) => void,\n    mediaConstraints: MediaConstraints,\n    authKey: string | undefined\n  ) {\n    this.mediaConstraints = mediaConstraints;\n    this.channelUrl = channelUrl;\n    if (typeof this.channelUrl === 'string') {\n      throw new Error(\n        `channelUrl parameter expected to be an URL not a string`\n      );\n    }\n    this.whepType = WHEPType.Client;\n    this.authKey = authKey;\n\n    this.onErrorHandler = onError;\n    this.audio = !this.mediaConstraints.videoOnly;\n    this.video = !this.mediaConstraints.audioOnly;\n    this.resetPeer(peer);\n  }\n\n  enableDebug() {\n    this.debug = true;\n  }\n\n  resetPeer(newPeer: RTCPeerConnection) {\n    this.localPeer = newPeer;\n    this.localPeer.onicegatheringstatechange =\n      this.onIceGatheringStateChange.bind(this);\n    this.localPeer.onicecandidate = this.onIceCandidate.bind(this);\n  }\n\n  getPeer(): RTCPeerConnection | undefined {\n    return this.localPeer;\n  }\n\n  async connect(opts?: AdapterConnectOptions) {\n    try {\n      await this.initSdpExchange();\n    } catch (error) {\n      console.error((error as Error).toString());\n      this.onErrorHandler('connecterror');\n    }\n  }\n\n  async disconnect() {\n    if (this.resource) {\n      this.log(`Disconnecting by removing resource ${this.resource}`);\n      const headers: {Authorization?: string} = {};\n      this.authKey && (headers['Authorization'] = this.authKey);\n      const response = await fetch(this.resource, {\n        method: 'DELETE',\n        headers,\n      });\n      if (response.ok) {\n        this.log(`Successfully removed resource`);\n      }\n    }\n  }\n\n  private async initSdpExchange() {\n    clearTimeout(this.iceGatheringTimeout);\n\n    if (this.localPeer && this.whepType === WHEPType.Client) {\n      if (this.video)\n        this.localPeer.addTransceiver('video', { direction: 'recvonly' });\n      if (this.audio)\n        this.localPeer.addTransceiver('audio', { direction: 'recvonly' });\n      const offer = await this.localPeer.createOffer();\n\n      // To add NACK in offer we have to add it manually see https://bugs.chromium.org/p/webrtc/issues/detail?id=4543 for details\n      if (offer.sdp) {\n        const opusCodecId = offer.sdp.match(/a=rtpmap:(\\d+) opus\\/48000\\/2/);\n\n        if (opusCodecId !== null) {\n          offer.sdp = offer.sdp.replace(\n            'opus/48000/2\\r\\n',\n            'opus/48000/2\\r\\na=rtcp-fb:' + opusCodecId[1] + ' nack\\r\\n'\n          );\n        }\n      }\n\n      await this.localPeer.setLocalDescription(offer);\n      this.waitingForCandidates = true;\n      this.iceGatheringTimeout = setTimeout(\n        this.onIceGatheringTimeout.bind(this),\n        DEFAULT_CONNECT_TIMEOUT\n      );\n    } else {\n      if (this.localPeer) {\n        const offer = await this.requestOffer();\n        await this.localPeer.setRemoteDescription({\n          type: 'offer',\n          sdp: offer\n        });\n        const answer = await this.localPeer.createAnswer();\n        try {\n          await this.localPeer.setLocalDescription(answer);\n          this.waitingForCandidates = true;\n          this.iceGatheringTimeout = setTimeout(\n            this.onIceGatheringTimeout.bind(this),\n            DEFAULT_CONNECT_TIMEOUT\n          );\n        } catch (error) {\n          this.log(answer.sdp);\n          throw error;\n        }\n      }\n    }\n  }\n\n  private async onIceCandidate(event: Event) {\n    if (event.type !== 'icecandidate') {\n      return;\n    }\n    const candidateEvent = <RTCPeerConnectionIceEvent>event;\n    const candidate: RTCIceCandidate | null = candidateEvent.candidate;\n    if (!candidate) {\n      return;\n    }\n\n    this.log(candidate.candidate);\n  }\n\n  private onIceGatheringStateChange(event: Event) {\n    if (this.localPeer) {\n      this.log('IceGatheringState', this.localPeer.iceGatheringState);\n      if (\n        this.localPeer.iceGatheringState !== 'complete' ||\n        !this.waitingForCandidates\n      ) {\n        return;\n      }\n\n      this.onDoneWaitingForCandidates();\n    }\n  }\n\n  private onIceGatheringTimeout() {\n    this.log('IceGatheringTimeout');\n\n    if (!this.waitingForCandidates) {\n      return;\n    }\n\n    this.onDoneWaitingForCandidates();\n  }\n\n  private async onDoneWaitingForCandidates() {\n    this.waitingForCandidates = false;\n    clearTimeout(this.iceGatheringTimeout);\n\n    if (this.whepType === WHEPType.Client) {\n      await this.sendOffer();\n    } else {\n      await this.sendAnswer();\n    }\n  }\n\n  private getResouceUrlFromHeaders(headers: Headers): string | null {\n    if (headers.get('Location') && headers.get('Location')?.match(/^\\//)) {\n      const resourceUrl = new URL(\n        headers.get('Location')!,\n        this.channelUrl.origin\n      );\n      return resourceUrl.toString();\n    } else {\n      return headers.get('Location');\n    }\n  }\n\n  private async requestOffer() {\n    if (this.whepType === WHEPType.Server) {\n      this.log(`Requesting offer from: ${this.channelUrl}`);\n      const headers: {'Content-Type': string, Authorization?: string} = {\n        'Content-Type': 'application/sdp'\n      };\n      this.authKey && (headers['Authorization'] = this.authKey);\n\n      const response = await fetch(this.channelUrl.toString(), {\n        method: 'POST',\n        headers,\n        body: ''\n      });\n      // Treat 204 No Content as stream not ready\n      if (response.status === 204) {\n        this.log('WHEP 204 No Content – stream not ready');\n        this.onErrorHandler('connectionfailed');\n        throw new Error('WHEP 204 No Content');\n      }\n      if (response.ok) {\n        this.resource = this.getResouceUrlFromHeaders(response.headers);\n        this.log('WHEP Resource', this.resource);\n        const offer = await response.text();\n        this.log('Received offer', offer);\n        return offer;\n      } else {\n        const serverMessage = await response.text();\n        throw new Error(serverMessage);\n      }\n    }\n  }\n\n  private async sendAnswer() {\n    if (!this.localPeer) {\n      this.log('Local RTC peer not initialized');\n      return;\n    }\n\n    if (this.whepType === WHEPType.Server && this.resource) {\n      const answer = this.localPeer.localDescription;\n      if (answer) {\n        const headers: {'Content-Type': string, Authorization?: string} = {\n          'Content-Type': 'application/sdp'\n        };\n        this.authKey && (headers['Authorization'] = this.authKey);\n        const response = await fetch(this.resource, {\n          method: 'PATCH',\n          headers,\n          body: answer.sdp\n        });\n        if (!response.ok) {\n          this.error(`sendAnswer response: ${response.status}`);\n        }\n      }\n    }\n  }\n\n  private async sendOffer() {\n    if (!this.localPeer) {\n      this.log('Local RTC peer not initialized');\n      return;\n    }\n\n    const offer = this.localPeer.localDescription;\n\n    if (this.whepType === WHEPType.Client && offer) {\n      this.log(`Sending offer to ${this.channelUrl}`);\n      const headers: {'Content-Type': string, Authorization?: string} = {\n        'Content-Type': 'application/sdp'\n      };\n      this.authKey && (headers['Authorization'] = this.authKey);\n      const response = await fetch(this.channelUrl.toString(), {\n        method: 'POST',\n        headers,\n        body: offer.sdp\n      });\n      // Treat 204 No Content as stream not ready\n      if (response.status === 204) {\n        this.log('WHEP 204 No Content – stream not ready');\n        this.onErrorHandler('connectionfailed');\n        return;\n      }\n      if (response.ok) {\n        this.resource = this.getResouceUrlFromHeaders(response.headers);\n        this.log('WHEP Resource', this.resource);\n        const answer = await response.text();\n        await this.localPeer.setRemoteDescription({\n          type: 'answer',\n          sdp: answer\n        });\n      } else if (response.status === 400) {\n        this.log(`server does not support client-offer, need to reconnect`);\n        this.whepType = WHEPType.Server;\n        this.onErrorHandler('reconnectneeded');\n      } else if (\n        response.status === 406 &&\n        this.audio &&\n        !this.mediaConstraints.audioOnly &&\n        !this.mediaConstraints.videoOnly\n      ) {\n        this.log(\n          `maybe server does not support audio. Let's retry without audio`\n        );\n        this.audio = false;\n        this.video = true;\n        this.onErrorHandler('reconnectneeded');\n      } else if (\n        response.status === 406 &&\n        this.video &&\n        !this.mediaConstraints.audioOnly &&\n        !this.mediaConstraints.videoOnly\n      ) {\n        this.log(\n          `maybe server does not support video. Let's retry without video`\n        );\n        this.audio = true;\n        this.video = false;\n        this.onErrorHandler('reconnectneeded');\n      } else {\n        this.error(`sendAnswer response: ${response.status}`);\n        this.onErrorHandler('connectionfailed');\n      }\n    }\n  }\n\n  private log(...args: any[]) {\n    if (this.debug) {\n      console.log('WebRTC-player', ...args);\n    }\n  }\n\n  private error(...args: any[]) {\n    console.error('WebRTC-player', ...args);\n  }\n}\n"],"names":[],"version":3,"file":"main.js.map","sourceRoot":"../"}